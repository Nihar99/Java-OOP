package extension;

import de.fhpotsdam.unfolding.data.Feature;
import de.fhpotsdam.unfolding.data.PointFeature;
import de.fhpotsdam.unfolding.marker.SimplePointMarker;
import processing.core.PGraphics;

public class OrangeZoneMarker extends SimplePointMarker {
	public OrangeZoneMarker(Feature city) {
		super(((PointFeature)city).getLocation(), city.getProperties());
	}
	public void draw(PGraphics pg, float x, float y) {
		// Save previous drawing style
		pg.pushStyle();
		
		// TODO: Add code to draw a triangle to represent the CityMarker
		// HINT: pg is the graphics object on which you call the graphics
		// methods.  e.g. pg.fill(255, 0, 0) will set the color to red
		// x and y are the center of the object to draw. 
		// They will be used to calculate the coordinates to pass
		// into any shape drawing methods.  
		// e.g. pg.rect(x, y, 10, 10) will draw a 10x10 square
		// whose upper left corner is at position x, y
		// Check out the processing documentation for more methods
		pg.fill(255, 255, 0);
		pg.triangle(x-TRI_SIZE,y+TRI_SIZE,x,y,x+TRI_SIZE,y+TRI_SIZE);
		
		// Restore previous drawing style
		pg.popStyle();
	}
}
